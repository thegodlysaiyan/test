"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _breakpoints = require("terra-application/lib/breakpoints");

var _applicationLoadingOverlay = _interopRequireDefault(require("terra-application/lib/application-loading-overlay"));

var _applicationIntl = require("terra-application/lib/application-intl");

var _ModalPresenter = _interopRequireDefault(require("./ModalPresenter"));

var _PendingActionToggle = _interopRequireDefault(require("./PendingActionToggle"));

var _LoadingOverlayPresenter = _interopRequireDefault(require("./LoadingOverlayPresenter"));

var _AppPageModule = _interopRequireDefault(require("./AppPage.module.scss"));

var cx = _bind.default.bind(_AppPageModule.default);

var AppPage = function AppPage(_ref) {
  var pageName = _ref.pageName;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isInitialized = _useState2[0],
      setIsInitialized = _useState2[1];

  var activeBreakpoint = (0, _react.useContext)(_breakpoints.ActiveBreakpointContext);
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      hasError = _useState4[0],
      setHasError = _useState4[1];

  (0, _react.useEffect)(function () {
    if (isInitialized) {
      return undefined;
    }

    var timeout = setTimeout(function () {
      setIsInitialized(true);
    }, window.TEST_APP_TIMEOUT);
    return function () {
      clearTimeout(timeout);
    };
  }, [isInitialized]);

  if (!isInitialized) {
    return _react.default.createElement(_applicationLoadingOverlay.default, {
      isOpen: true,
      backgroundStyle: "clear"
    });
  }

  if (hasError) {
    throw new Error("".concat(pageName, " threw an error to test the application's error handling"));
  }

  return _react.default.createElement("div", {
    className: cx('page-content')
  }, _react.default.createElement("h1", null, pageName), _react.default.createElement("h3", null, "Configuration Properties"), _react.default.createElement("p", null, "Active Breakpoint:", ' ', _react.default.createElement("span", null, activeBreakpoint)), _react.default.createElement("p", null, "Intl Locale:", ' ', _react.default.createElement("span", null, applicationIntl.locale)), _react.default.createElement("h3", null, "Error Handling"), _react.default.createElement("p", null, "Press the button below to throw an exception that will be caught and handled by the framework"), _react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setHasError(true);
    }
  }, "Throw Error"), _react.default.createElement(_LoadingOverlayPresenter.default, null), _react.default.createElement(_ModalPresenter.default, null), _react.default.createElement(_PendingActionToggle.default, null));
};

AppPage.propTypes = {
  pageName: _propTypes.default.string
};
var _default = AppPage;
exports.default = _default;