"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _applicationIntl = require("terra-application/lib/application-intl");

var _breakpoints = require("terra-application/lib/breakpoints");

var _applicationLoadingOverlay = _interopRequireDefault(require("terra-application/lib/application-loading-overlay"));

var _applicationBase = _interopRequireDefault(require("terra-application/lib/application-base"));

var _navigationPrompt = _interopRequireDefault(require("terra-application/lib/navigation-prompt"));

var ApplicationContentExample = function ApplicationContentExample() {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isLoading = _useState2[0],
      setIsLoading = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      throwError = _useState4[0],
      setThrowError = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      blockUnload = _useState6[0],
      setBlockUnload = _useState6[1];

  var activeBreakpoint = (0, _react.useContext)(_breakpoints.ActiveBreakpointContext);
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);

  if (throwError) {
    throw new Error("Testing ApplicationBase's error boundary...");
  }

  var activeBreakpointExample = _react.default.createElement("p", null, "Active Breakpoint:", ' ', activeBreakpoint);

  var intlExample = _react.default.createElement("p", null, "Active Locale:", ' ', applicationIntl.locale);

  var errorBoundaryExample = _react.default.createElement("p", null, "Render Error:", ' ', _react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setThrowError(true);
    }
  }, "Throw"));

  var loadingOverlayExample = _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("p", null, "Show Loading Overlay (3 seconds):", ' ', _react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setIsLoading(true);
      setTimeout(function () {
        setIsLoading(false);
      }, 3000);
    }
  }, "Show")), _react.default.createElement(_applicationLoadingOverlay.default, {
    isOpen: isLoading,
    message: "Testing ApplicationBase's loading overlay",
    backgroundStyle: "light"
  }));

  var navigationPromptExample = _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("p", null, "Prompt on window close:", ' ', _react.default.createElement("input", {
    type: "checkbox",
    name: "prompt",
    onChange: function onChange() {
      setBlockUnload(!blockUnload);
    }
  })), blockUnload ? _react.default.createElement(_navigationPrompt.default, {
    description: "Testing ApplicationBase's navigation prompt handling"
  }) : undefined);

  return _react.default.createElement("div", null, activeBreakpointExample, intlExample, errorBoundaryExample, loadingOverlayExample, navigationPromptExample);
};

var ApplicationBaseExample = function ApplicationBaseExample() {
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);
  return _react.default.createElement(_applicationBase.default, {
    locale: applicationIntl.locale
  }, _react.default.createElement(ApplicationContentExample, null));
};

var _default = ApplicationBaseExample;
exports.default = _default;