"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _breakpoints = require("../../../breakpoints");

var _applicationLoadingOverlay = _interopRequireDefault(require("../../../application-loading-overlay"));

var _applicationBase = _interopRequireDefault(require("../../../application-base"));

var _navigationPrompt = _interopRequireDefault(require("../../../navigation-prompt"));

var _applicationIntl = require("../../../application-intl");

var ApplicationContentTest = function ApplicationContentTest() {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isLoading = _useState2[0],
      setIsLoading = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      throwError = _useState4[0],
      setThrowError = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      blockUnload = _useState6[0],
      setBlockUnload = _useState6[1];

  var activeBreakpoint = (0, _react.useContext)(_breakpoints.ActiveBreakpointContext);
  var applicationIntl = (0, _react.useContext)(_applicationIntl.ApplicationIntlContext);

  if (throwError) {
    throw new Error("Testing ApplicationBase's error boundary...");
  }

  var activeBreakpointTest = _react.default.createElement("p", null, "Active Breakpoint:", ' ', activeBreakpoint);

  var intlTest = _react.default.createElement("p", null, "Active Locale:", ' ', applicationIntl.locale);

  var errorBoundaryTest = _react.default.createElement("p", null, "Render Error:", ' ', _react.default.createElement("button", {
    id: "error",
    type: "button",
    onClick: function onClick() {
      setThrowError(true);
    }
  }, "Throw"));

  var loadingOverlayTest = _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("p", null, "Show Loading Overlay:", ' ', _react.default.createElement("button", {
    id: "overlay",
    type: "button",
    onClick: function onClick() {
      setIsLoading(true);
    }
  }, "Show")), _react.default.createElement(_applicationLoadingOverlay.default, {
    isOpen: isLoading,
    message: "Testing ApplicationBase's loading overlay"
  }));

  var navigationPromptTest = _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("p", null, "Prompt on window close:", ' ', _react.default.createElement("button", {
    id: "prompt",
    type: "button",
    onClick: function onClick() {
      setBlockUnload(!blockUnload);
    }
  }, "Enable navigation prompt")), blockUnload ? _react.default.createElement(_navigationPrompt.default, {
    description: "Testing ApplicationBase's navigation prompt handling"
  }) : undefined);

  return _react.default.createElement("div", null, activeBreakpointTest, intlTest, errorBoundaryTest, loadingOverlayTest, navigationPromptTest);
};

var ApplicationBaseTest = function ApplicationBaseTest() {
  return _react.default.createElement(_applicationBase.default, {
    locale: "en-US"
  }, _react.default.createElement(ApplicationContentTest, null));
};

var _default = ApplicationBaseTest;
exports.default = _default;