"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _prismLight = _interopRequireDefault(require("react-syntax-highlighter/dist/cjs/prism-light"));

var _jsx = _interopRequireDefault(require("react-syntax-highlighter/dist/cjs/languages/prism/jsx"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _ExampleTemplateModule = _interopRequireDefault(require("./ExampleTemplate.module.scss"));

var _syntaxHighlighterTheme = _interopRequireDefault(require("./syntax-highlighter-theme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

_prismLight.default.registerLanguage('jsx', _jsx.default);

var cx = _bind.default.bind(_ExampleTemplateModule.default);

var propTypes = {
  /**
   * The example component.
   */
  example: _propTypes.default.element,

  /**
   * The example source code.
   */
  exampleSrc: _propTypes.default.string,

  /**
   * The example title.
   */
  title: _propTypes.default.string,

  /**
   * The example description.
   */
  description: _propTypes.default.node,

  /**
   * Additional content.
   */
  children: _propTypes.default.element
};
var defaultProps = {
  example: undefined,
  exampleSrc: undefined,
  title: undefined,
  description: undefined,
  children: undefined
};

var ExampleTemplate =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ExampleTemplate, _React$Component);

  function ExampleTemplate(props) {
    var _this;

    _classCallCheck(this, ExampleTemplate);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExampleTemplate).call(this, props));
    _this.state = {
      isExpanded: false,
      isBackgroundTransparent: false
    };
    _this.handleBgToggle = _this.handleBgToggle.bind(_assertThisInitialized(_this));
    _this.handleCodeToggle = _this.handleCodeToggle.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(ExampleTemplate, [{
    key: "handleBgToggle",
    value: function handleBgToggle() {
      this.setState(function (prevState) {
        return {
          isBackgroundTransparent: !prevState.isBackgroundTransparent
        };
      });
    }
  }, {
    key: "handleCodeToggle",
    value: function handleCodeToggle() {
      this.setState(function (prevState) {
        return {
          isExpanded: !prevState.isExpanded
        };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          example = _this$props.example,
          exampleSrc = _this$props.exampleSrc,
          children = _this$props.children,
          description = _this$props.description,
          customProps = _objectWithoutProperties(_this$props, ["title", "example", "exampleSrc", "children", "description"]);

      var _this$state = this.state,
          isExpanded = _this$state.isExpanded,
          isBackgroundTransparent = _this$state.isBackgroundTransparent;
      var dynamicContentStyle = {};

      if (isBackgroundTransparent) {
        dynamicContentStyle = {
          backgroundColor: 'rgba(0, 0, 0, 0)'
        };
      }

      return _react.default.createElement("div", _extends({}, customProps, {
        className: cx('template', customProps.className)
      }), title && _react.default.createElement("div", {
        className: cx('header')
      }, _react.default.createElement("h2", {
        className: cx('title')
      }, title)), _react.default.createElement("div", {
        className: cx('content'),
        style: dynamicContentStyle
      }, description && _react.default.createElement("div", {
        className: cx('description')
      }, description), example, children), exampleSrc && _react.default.createElement("div", {
        className: cx('footer')
      }, _react.default.createElement("div", {
        className: cx('button-container')
      }, _react.default.createElement("button", {
        type: "button",
        className: cx('bg-toggle'),
        onClick: this.handleBgToggle
      }, "Toggle Background"), _react.default.createElement("button", {
        type: "button",
        className: cx('code-toggle'),
        onClick: this.handleCodeToggle
      }, _react.default.createElement("span", {
        className: cx('chevron-left')
      }), _react.default.createElement("span", null, "Code"), _react.default.createElement("span", {
        className: cx('chevron-right')
      }))), _react.default.createElement("div", {
        className: cx('code', {
          'is-expanded': isExpanded
        }),
        "aria-hidden": !isExpanded
      }, isExpanded ? _react.default.createElement(_prismLight.default, {
        language: "jsx",
        style: _syntaxHighlighterTheme.default,
        customStyle: {
          margin: '0',
          borderRadius: '0'
        }
      }, exampleSrc) : undefined)));
    }
  }]);

  return ExampleTemplate;
}(_react.default.Component);

ExampleTemplate.propTypes = propTypes;
ExampleTemplate.defaultProps = defaultProps;
var _default = ExampleTemplate;
exports.default = _default;