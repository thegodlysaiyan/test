"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _PlaceholderModule = _interopRequireDefault(require("./Placeholder.module.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var cx = _bind.default.bind(_PlaceholderModule.default);

var propTypes = {
  /**
   * The themed variant of the text and border. Example, use the light variant when against a dark background.
   */
  variant: _propTypes.default.oneOf(['light', 'dark']),

  /**
   * The placeholder text to be displayed.
   */
  title: _propTypes.default.string
};
var defaultProps = {
  variant: 'dark',
  title: ''
};

var Placeholder = function Placeholder(_ref) {
  var variant = _ref.variant,
      title = _ref.title,
      customProps = _objectWithoutProperties(_ref, ["variant", "title"]);

  var placeholderClassNames = cx(['placeholder', customProps.className]);
  var innerClassNames = cx(['inner', "is-".concat(variant)]);
  return _react.default.createElement("div", _extends({}, customProps, {
    className: placeholderClassNames
  }), _react.default.createElement("div", {
    className: innerClassNames
  }, _react.default.createElement("h2", null, title)));
};

Placeholder.propTypes = propTypes;
Placeholder.defaultProps = defaultProps;
var _default = Placeholder;
exports.default = _default;