"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FitTypes = exports.ImageVariant = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _objectFitImages = _interopRequireDefault(require("object-fit-images"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _ImageModule = _interopRequireDefault(require("./Image.module.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var cx = _bind.default.bind(_ImageModule.default);

var ImageVariant = {
  DEFAULT: 'default',
  ROUNDED: 'rounded',
  CIRCLE: 'circle',
  THUMBNAIL: 'thumbnail'
};
exports.ImageVariant = ImageVariant;
var FitTypes = {
  COVER: 'cover',
  SCALEDOWN: 'scale-down',
  FILL: 'fill',
  CONTAIN: 'contain',
  NONE: 'none'
};
exports.FitTypes = FitTypes;
var propTypes = {
  /**
   * The source string for the image which will be loaded and displayed.
   */
  src: _propTypes.default.string.isRequired,

  /**
   * Sets the style of the image from the following values; `default`, `rounded`, `circle`, `thumbnail`.
   */
  variant: _propTypes.default.oneOf(['default', 'rounded', 'circle', 'thumbnail']),

  /**
   * Sets the fluid behavior of the image, which is `nonfluid` by default.
   */
  isFluid: _propTypes.default.bool,

  /**
   * The text content that specifies an alternative text for an image.
   */
  alt: _propTypes.default.string.isRequired,

  /**
   * A React element which will be displayed during loading and in case of src load failure.
   */
  placeholder: _propTypes.default.element,

  /**
   * Sets the height of the image.
   */
  height: _propTypes.default.string,

  /**
   * Sets the width of the image.
   */
  width: _propTypes.default.string,

  /**
   * Function to be executed when the image load is successful.
   */
  onLoad: _propTypes.default.func,

  /**
   * Function to be executed when the image load errors.
   */
  onError: _propTypes.default.func,

  /**
  * Sets the `object-fit` style of the image from the following values; `cover`, `contain`, `fill`, `scale-down`, `none`.
  */
  fit: _propTypes.default.oneOf(['cover', 'scale-down', 'fill', 'contain', 'none'])
};
/* eslint-disable react/default-props-match-prop-types */

var defaultProps = {
  variant: 'default',
  isFluid: false,
  alt: ' ',
  fit: 'fill'
};
/* eslint-enable react/default-props-match-prop-types */

var Image = /*#__PURE__*/function (_React$Component) {
  _inherits(Image, _React$Component);

  function Image(props) {
    var _this;

    _classCallCheck(this, Image);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Image).call(this, props));
    _this.ImageRef = _react.default.createRef();
    _this.state = {
      isLoading: true,
      isError: false,
      prevPropsSrc: props.src
    };
    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));
    _this.handleOnError = _this.handleOnError.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Image, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      (0, _objectFitImages.default)(this.ImageRef.current);
    }
  }, {
    key: "handleOnLoad",
    value: function handleOnLoad() {
      this.setState({
        isLoading: false
      });
      var onLoad = this.props.onLoad;

      if (onLoad !== undefined) {
        onLoad();
      }
    }
  }, {
    key: "handleOnError",
    value: function handleOnError() {
      this.setState({
        isLoading: false,
        isError: true
      });
      var onError = this.props.onError;

      if (onError !== undefined) {
        onError();
      }
    }
  }, {
    key: "createImage",
    value: function createImage(customProps, imageClasses) {
      var _this$props = this.props,
          src = _this$props.src,
          alt = _this$props.alt,
          height = _this$props.height,
          width = _this$props.width;
      return _react.default.createElement("img", _extends({}, customProps, {
        src: src,
        alt: alt,
        height: height,
        width: width,
        onLoad: this.handleOnLoad,
        onError: this.handleOnError,
        className: imageClasses,
        ref: this.ImageRef
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          src = _this$props2.src,
          variant = _this$props2.variant,
          isFluid = _this$props2.isFluid,
          alt = _this$props2.alt,
          placeholder = _this$props2.placeholder,
          height = _this$props2.height,
          width = _this$props2.width,
          onLoad = _this$props2.onLoad,
          onError = _this$props2.onError,
          fit = _this$props2.fit,
          customProps = _objectWithoutProperties(_this$props2, ["src", "variant", "isFluid", "alt", "placeholder", "height", "width", "onLoad", "onError", "fit"]);

      var imageClasses = cx(['image', fit, variant, customProps.className, {
        fluid: isFluid
      }, {
        hidden: placeholder && this.state.isLoading
      }]);
      delete customProps.className;

      if (!this.state.isLoading) {
        (0, _objectFitImages.default)(this.ImageRef.current);
      }

      if (placeholder) {
        if (this.state.isLoading) {
          return _react.default.createElement(_react.default.Fragment, null, this.createImage(customProps, imageClasses), placeholder);
        }

        return this.state.isError ? placeholder : this.createImage(customProps, imageClasses);
      }

      return this.createImage(customProps, imageClasses);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.src !== prevState.prevPropsSrc) {
        return {
          isLoading: true,
          isError: false,
          prevPropsSrc: nextProps.src
        };
      }

      return null;
    }
  }]);

  return Image;
}(_react.default.Component);

Image.propTypes = propTypes;
Image.defaultProps = defaultProps;
var _default = Image;
exports.default = _default;