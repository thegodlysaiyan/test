"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function FitTypesWrapper(WrappedComponent) {
  return (/*#__PURE__*/function (_React$Component) {
      _inherits(FitTypes, _React$Component);

      function FitTypes(props) {
        var _this;

        _classCallCheck(this, FitTypes);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(FitTypes).call(this, props));
        _this.handleOnSelect = _this.handleOnSelect.bind(_assertThisInitialized(_this));
        _this.state = {
          fitType: 'fill',
          variantType: 'default'
        };
        return _this;
      }

      _createClass(FitTypes, [{
        key: "handleOnSelect",
        value: function handleOnSelect(event) {
          this.setState(_defineProperty({}, event.target.name, event.target.value));
        }
      }, {
        key: "render",
        value: function render() {
          return _react.default.createElement("div", null, _react.default.createElement(WrappedComponent, _extends({
            fit: this.state.fitType,
            variant: this.state.variantType
          }, this.props)), _react.default.createElement("p", null, _react.default.createElement("label", {
            htmlFor: "fitType"
          }, "Select a Fit Type:")), _react.default.createElement("select", {
            id: "fitType",
            name: "fitType",
            value: this.state.fitType,
            onChange: this.handleOnSelect
          }, _react.default.createElement("option", {
            value: "fill"
          }, "fill"), _react.default.createElement("option", {
            value: "cover"
          }, "cover"), _react.default.createElement("option", {
            value: "contain"
          }, "contain"), _react.default.createElement("option", {
            value: "scale-down"
          }, "scale-down"), _react.default.createElement("option", {
            value: "none"
          }, "none")), _react.default.createElement("p", null, _react.default.createElement("label", {
            htmlFor: "variantType"
          }, "Select a Variant Type:")), _react.default.createElement("select", {
            id: "variantType",
            name: "variantType",
            value: this.state.variantType,
            onChange: this.handleOnSelect
          }, _react.default.createElement("option", {
            value: "default"
          }, "default"), _react.default.createElement("option", {
            value: "circle"
          }, "circle"), _react.default.createElement("option", {
            value: "rounded"
          }, "rounded"), _react.default.createElement("option", {
            value: "thumbnail"
          }, "thumbnail")));
        }
      }]);

      return FitTypes;
    }(_react.default.Component)
  );
}

var _default = FitTypesWrapper;
exports.default = _default;