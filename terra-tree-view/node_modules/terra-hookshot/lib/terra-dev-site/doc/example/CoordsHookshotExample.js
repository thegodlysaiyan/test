"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _InputField = _interopRequireDefault(require("terra-form-input/lib/InputField"));

var _terraHookshot = _interopRequireDefault(require("terra-hookshot"));

var _HookshotDocCommonModule = _interopRequireDefault(require("./HookshotDocCommon.module.scss"));

var cx = _bind.default.bind(_HookshotDocCommonModule.default);

var ATTACHMENT_POSITIONS = ['top start', 'top center', 'top end', 'middle start', 'middle center', 'middle end', 'bottom start', 'bottom center', 'bottom end'];

var generateOptions = function generateOptions(values) {
  return values.map(function (currentValue, index) {
    var keyValue = index;
    return _react.default.createElement("option", {
      key: keyValue,
      value: currentValue
    }, currentValue);
  });
};

var attachmentValues = function attachmentValues(attachment) {
  if (attachment === 'middle start') {
    return {
      vertical: 'middle',
      horizontal: 'start'
    };
  }

  if (attachment === 'middle end') {
    return {
      vertical: 'middle',
      horizontal: 'end'
    };
  }

  if (attachment === 'middle center') {
    return {
      vertical: 'middle',
      horizontal: 'center'
    };
  }

  if (attachment === 'top start') {
    return {
      vertical: 'top',
      horizontal: 'start'
    };
  }

  if (attachment === 'top end') {
    return {
      vertical: 'top',
      horizontal: 'end'
    };
  }

  if (attachment === 'top center') {
    return {
      vertical: 'top',
      horizontal: 'center'
    };
  }

  if (attachment === 'bottom start') {
    return {
      vertical: 'bottom',
      horizontal: 'start'
    };
  }

  if (attachment === 'bottom end') {
    return {
      vertical: 'bottom',
      horizontal: 'end'
    };
  }

  return {
    vertical: 'bottom',
    horizontal: 'center'
  };
};

var getId = function getId(name) {
  return "".concat(name, "CoordsExample");
};

var HookshotStandard =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(HookshotStandard, _React$Component);

  function HookshotStandard(props) {
    var _this;

    (0, _classCallCheck2.default)(this, HookshotStandard);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HookshotStandard).call(this, props));
    _this.handleRegionClick = _this.handleRegionClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleRequestClose = _this.handleRequestClose.bind((0, _assertThisInitialized2.default)(_this));
    _this.setParentNode = _this.setParentNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.getParentNode = _this.getParentNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleAttachementBehaviorChange = _this.handleAttachementBehaviorChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleContentAttachmentChange = _this.handleContentAttachmentChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleInputChange = _this.handleInputChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      isOpen: false,
      coordinates: undefined,
      hookshotContentAttachment: ATTACHMENT_POSITIONS[1],
      hookshotAttachmentBehavior: _terraHookshot.default.attachmentBehaviors[0],
      hookshotAttachmentMargin: 0
    };
    return _this;
  }

  (0, _createClass2.default)(HookshotStandard, [{
    key: "setParentNode",
    value: function setParentNode(node) {
      this.parentNode = node;
    }
  }, {
    key: "getParentNode",
    value: function getParentNode() {
      return this.parentNode;
    }
  }, {
    key: "handleRegionClick",
    value: function handleRegionClick(event) {
      var coordinates = {
        x: event.clientX,
        y: event.clientY
      };
      this.setState(function (prevState) {
        return {
          isOpen: !prevState.isOpen,
          coordinates: coordinates
        };
      });
    }
  }, {
    key: "handleRequestClose",
    value: function handleRequestClose() {
      this.setState({
        isOpen: false
      });
    }
  }, {
    key: "handleAttachementBehaviorChange",
    value: function handleAttachementBehaviorChange(event) {
      this.setState({
        hookshotAttachmentBehavior: event.target.value
      });
    }
  }, {
    key: "handleContentAttachmentChange",
    value: function handleContentAttachmentChange(event) {
      this.setState({
        hookshotContentAttachment: event.target.value
      });
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(event) {
      this.setState((0, _defineProperty2.default)({}, event.target.name, Number.parseFloat(event.target.value)));
    }
  }, {
    key: "render",
    value: function render() {
      var hookshotContent = _react.default.createElement(_terraHookshot.default.Content, {
        onEsc: this.handleRequestClose,
        onOutsideClick: this.handleRequestClose,
        onResize: this.handleRequestClose
      }, _react.default.createElement("div", {
        className: cx('content-wrapper')
      }, "Hookshot"));

      return (
        /* eslint-disable jsx-a11y/no-static-element-interactions */
        _react.default.createElement("div", null, _react.default.createElement("div", {
          className: cx('heading-wrapper')
        }, _react.default.createElement("label", {
          htmlFor: getId('hookshotAttachmentBehavior'),
          className: cx('label')
        }, "Attachment Behavior")), _react.default.createElement("select", {
          id: getId('hookshotAttachmentBehavior'),
          name: "hookshotAttachmentBehavior",
          value: this.state.hookshotAttachmentBehavior,
          onChange: this.handleAttachementBehaviorChange,
          className: cx('select-wrapper')
        }, generateOptions(_terraHookshot.default.attachmentBehaviors)), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement(_InputField.default, {
          label: "Attachment Margin in Px",
          inputId: getId('hookshotAttachmentMargin'),
          inputAttrs: {
            name: 'hookshotAttachmentMargin',
            type: 'number'
          },
          defaultValue: this.state.hookshotAttachmentMargin,
          className: cx('input-wrapper'),
          onChange: this.handleInputChange
        }), _react.default.createElement("div", {
          className: cx('heading-wrapper')
        }, _react.default.createElement("label", {
          htmlFor: getId('hookshotContentAttachment'),
          className: cx('label')
        }, "Content Attachment")), _react.default.createElement("select", {
          id: getId('hookshotContentAttachment'),
          name: "hookshotContentAttachment",
          value: this.state.hookshotContentAttachment,
          onChange: this.handleContentAttachmentChange,
          className: cx('select-wrapper')
        }, generateOptions(ATTACHMENT_POSITIONS)), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement("div", {
          onClick: this.handleRegionClick,
          className: cx('coords-parent-node-wrapper'),
          ref: this.setParentNode
        }, "Click Inside", _react.default.createElement(_terraHookshot.default, {
          attachmentBehavior: this.state.hookshotAttachmentBehavior,
          attachmentMargin: this.state.hookshotAttachmentMargin,
          boundingRef: this.getParentNode,
          contentAttachment: attachmentValues(this.state.hookshotContentAttachment),
          isEnabled: true,
          isOpen: this.state.isOpen,
          targetCoordinates: this.state.coordinates
        }, hookshotContent)))
        /* eslint-enable jsx-a11y/no-static-element-interactions */

      );
    }
  }]);
  return HookshotStandard;
}(_react.default.Component);

var _default = HookshotStandard;
exports.default = _default;