"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _applicationBase = _interopRequireDefault(require("terra-application/lib/application-base"));

var _IconSearch = _interopRequireDefault(require("terra-icon/lib/icon/IconSearch"));

var _IconPill = _interopRequireDefault(require("terra-icon/lib/icon/IconPill"));

var _IconVisualization = _interopRequireDefault(require("terra-icon/lib/icon/IconVisualization"));

var _IconLightbulb = _interopRequireDefault(require("terra-icon/lib/icon/IconLightbulb"));

var _Placeholder = _interopRequireDefault(require("terra-doc-template/lib/Placeholder"));

var _ExampleWrapper = _interopRequireDefault(require("./ExampleWrapper"));

var _ApplicationNavigation = _interopRequireDefault(require("../../../ApplicationNavigation"));

/* eslint-disable react/prop-types */
var titleConfig = {
  title: 'Test Title'
};
var userConfig = {
  name: 'Test Name',
  initials: 'TN'
};
var extensionItems = [{
  icon: _react.default.createElement(_IconSearch.default, null),
  key: 'item-a',
  text: 'Item A',
  metaData: {
    test: 'a'
  }
}, {
  icon: _react.default.createElement(_IconPill.default, null),
  key: 'item-b',
  text: 'Item B',
  metaData: {
    test: 'b'
  }
}, {
  icon: _react.default.createElement(_IconVisualization.default, null),
  key: 'item-c',
  text: 'Item C',
  metaData: {
    test: 'c'
  }
}, {
  icon: _react.default.createElement(_IconLightbulb.default, null),
  key: 'item-d',
  text: 'Item D',
  metaData: {
    test: 'd'
  }
}];
var navigationItems = [{
  key: '/page_1',
  text: 'Page 1',
  metaData: {
    display: 'Page 1'
  }
}, {
  key: '/page_2',
  text: 'Page 2',
  metaData: {
    display: 'Page 2'
  }
}, {
  key: '/page_3',
  text: 'Page 3',
  metaData: {
    display: 'Page 3'
  }
}, {
  key: '/page_4',
  text: 'Page 4',
  metaData: {
    display: 'Page 4'
  }
}, {
  key: '/page_5',
  text: 'Page 5',
  metaData: {
    display: 'Page 5'
  }
}, {
  key: '/page_6',
  text: 'Page 6',
  metaData: {
    display: 'Page 6'
  }
}, {
  key: '/page_7',
  text: 'Page 7',
  metaData: {
    display: 'Page 7'
  }
}, {
  key: '/page_8',
  text: 'Page 8',
  metaData: {
    display: 'Page 8'
  }
}];
var utilityItems = [{
  icon: _react.default.createElement(_IconSearch.default, null),
  key: 'item-a',
  text: 'Item A',
  metaData: {
    test: 'a'
  }
}, {
  icon: _react.default.createElement(_IconPill.default, null),
  key: 'item-b',
  text: 'Item B',
  metaData: {
    test: 'b'
  }
}, {
  icon: _react.default.createElement(_IconVisualization.default, null),
  key: 'item-c',
  text: 'Item C',
  metaData: {
    test: 'c'
  }
}, {
  icon: _react.default.createElement(_IconLightbulb.default, null),
  key: 'item-d',
  text: 'Item D',
  metaData: {
    test: 'd'
  }
}];

var ExampleApplication = function ExampleApplication(_ref) {
  var onAction = _ref.onAction;

  var _useState = (0, _react.useState)(navigationItems[0].key),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      activeKey = _useState2[0],
      setActiveKey = _useState2[1];

  return _react.default.createElement(_applicationBase.default, {
    locale: "en-US"
  }, _react.default.createElement(_ApplicationNavigation.default, {
    titleConfig: titleConfig,
    userConfig: userConfig,
    extensionItems: extensionItems,
    onSelectExtensionItem: onAction,
    navigationItems: navigationItems,
    activeNavigationItemKey: activeKey,
    onSelectNavigationItem: function onSelectNavigationItem(key) {
      return setActiveKey(key);
    },
    utilityItems: utilityItems,
    onSelectUtilityItem: onAction,
    onSelectSettings: function onSelectSettings() {
      return onAction('settings');
    } // eslint-disable-line no-alert
    ,
    onSelectHelp: function onSelectHelp() {
      return onAction('help');
    } // eslint-disable-line no-alert
    ,
    onSelectLogout: function onSelectLogout() {
      return onAction('logout');
    } // eslint-disable-line no-alert

  }, _react.default.createElement(_Placeholder.default, {
    title: activeKey
  })));
};

var ExampleNavigation = function ExampleNavigation() {
  return _react.default.createElement(_ExampleWrapper.default, null, _react.default.createElement(ExampleApplication, null));
};

var _default = ExampleNavigation;
exports.default = _default;