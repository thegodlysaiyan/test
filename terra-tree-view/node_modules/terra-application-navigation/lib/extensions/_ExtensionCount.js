"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _helpers = require("../utils/helpers");

var _ExtensionCountModule = _interopRequireDefault(require("./ExtensionCount.module.scss"));

var cx = _bind.default.bind(_ExtensionCountModule.default);

var propTypes = {
  /**
   * The number of notifications to display.
   */
  value: _propTypes.default.number,

  /**
   * Whether or not the count represents rolled up counts.
   */
  isRollup: _propTypes.default.bool
};

var ExtensionCount = function ExtensionCount(_ref) {
  var value = _ref.value,
      isRollup = _ref.isRollup,
      customProps = (0, _objectWithoutProperties2.default)(_ref, ["value", "isRollup"]);
  var countRef = (0, _react.useRef)();
  (0, _helpers.useAnimatedCount)(countRef, value);
  var validatedValue = value;

  if (isRollup) {
    validatedValue = null;
  } else if (value >= 99) {
    validatedValue = '99+';
  }

  return _react.default.createElement("div", {
    ref: countRef,
    className: cx('count', {
      'is-rollup': isRollup
    }, customProps.className),
    "aria-label": validatedValue
  }, validatedValue);
};

ExtensionCount.propTypes = propTypes;
var _default = ExtensionCount;
exports.default = _default;