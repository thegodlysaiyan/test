"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _reactIntl = require("react-intl");

var _helpers = require("../utils/helpers");

var _TabCountModule = _interopRequireDefault(require("./TabCount.module.scss"));

var cx = _bind.default.bind(_TabCountModule.default);

var propTypes = {
  /**
   * The number of notifications to display.
   */
  value: _propTypes.default.number,

  /**
   * Whether or not the count represents rolled up counts.
   */
  isRollup: _propTypes.default.bool,

  /**
   * @private
   * Object containing intl APIs.
   */
  intl: _reactIntl.intlShape
};

var TabCount = function TabCount(_ref) {
  var value = _ref.value,
      isRollup = _ref.isRollup,
      intl = _ref.intl;
  var countRef = (0, _react.useRef)();
  (0, _helpers.useAnimatedCount)(countRef, value);
  var validatedValue = value;

  if (isRollup) {
    validatedValue = intl.formatMessage({
      id: 'Terra.applicationNavigation.notifications.new'
    });
  } else if (value >= 999) {
    validatedValue = '99+';
  }

  return _react.default.createElement("div", {
    ref: countRef,
    className: cx('count', {
      'is-rollup': isRollup
    })
  }, validatedValue);
};

TabCount.propTypes = propTypes;

var _default = (0, _reactIntl.injectIntl)(TabCount);

exports.default = _default;