"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _terraButton = _interopRequireDefault(require("terra-button"));

var _terraDisclosureManager = require("terra-disclosure-manager");

var _PopupModalContent = _interopRequireDefault(require("./PopupModalContent"));

var ModalContainer = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(ModalContainer, _React$Component);

  function ModalContainer(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ModalContainer);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModalContainer).call(this, props));
    _this.disclose = _this.disclose.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(ModalContainer, [{
    key: "disclose",
    value: function disclose() {
      this.props.disclosureManager.disclose({
        preferredType: 'modal',
        size: '',
        content: {
          key: 'PopupModalContent',
          component: _react.default.createElement(_PopupModalContent.default, null)
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement(_terraButton.default, {
        className: "disclose",
        text: "Disclose Modal",
        onClick: this.disclose
      });
    }
  }]);
  return ModalContainer;
}(_react.default.Component);

ModalContainer.propTypes = {
  disclosureManager: _terraDisclosureManager.disclosureManagerShape
};

var _default = (0, _terraDisclosureManager.withDisclosureManager)(ModalContainer);

exports.default = _default;