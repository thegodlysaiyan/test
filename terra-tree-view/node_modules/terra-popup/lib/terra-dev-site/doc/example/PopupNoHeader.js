"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _terraButton = _interopRequireDefault(require("terra-button"));

var _terraContentContainer = _interopRequireDefault(require("terra-content-container"));

var _terraPopup = _interopRequireDefault(require("terra-popup"));

var _Placeholder = _interopRequireDefault(require("terra-doc-template/lib/Placeholder"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _PopupDocCommonModule = _interopRequireDefault(require("./PopupDocCommon.module.scss"));

var cx = _bind.default.bind(_PopupDocCommonModule.default);
/* eslint-disable */


var PopupContent = function PopupContent(_ref) {
  var closeButtonRequired = _ref.closeButtonRequired,
      handleRequestClose = _ref.handleRequestClose;

  var placeHolder = _react.default.createElement(_Placeholder.default, {
    title: "Popup Content"
  });

  if (closeButtonRequired) {
    return _react.default.createElement(_terraContentContainer.default, {
      header: _react.default.createElement(_terraButton.default, {
        text: "My Custom Close Button",
        isBlock: true,
        onClick: handleRequestClose
      }),
      fill: true
    }, placeHolder);
  }

  return placeHolder;
};
/* eslint-enable */


function PopupNoHeader() {
  var parentElement = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var setParentNode = function setParentNode(node) {
    parentElement.current = node;
  };

  var getParentNode = function getParentNode() {
    return parentElement.current;
  };

  var handleButtonClick = function handleButtonClick() {
    setOpen(true);
  };

  var handleRequestClose = function handleRequestClose() {
    setOpen(false);
  };

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
    className: cx('content-wrapper'),
    ref: setParentNode
  }, _react.default.createElement(_terraPopup.default, {
    boundingRef: getParentNode,
    contentHeight: "240",
    contentWidth: "320",
    isHeaderDisabled: true,
    isOpen: open,
    onRequestClose: handleRequestClose,
    targetRef: function targetRef() {
      return document.getElementById('popup-no-header');
    },
    isContentFocusDisabled: true
  }, _react.default.createElement(PopupContent, {
    title: "Popup Content",
    handleRequestClose: handleRequestClose
  })), _react.default.createElement(_terraButton.default, {
    id: "popup-no-header",
    text: "No Header Popup",
    onClick: handleButtonClick
  })));
}

var _default = PopupNoHeader;
exports.default = _default;