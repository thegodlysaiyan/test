"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _terraButton = _interopRequireDefault(require("terra-button"));

var _terraDisclosureManager = require("terra-disclosure-manager");

var _terraPopup = _interopRequireDefault(require("terra-popup"));

var _Placeholder = _interopRequireDefault(require("terra-doc-template/lib/Placeholder"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _PopupModalContentModule = _interopRequireDefault(require("./PopupModalContent.module.scss"));

var cx = _bind.default.bind(_PopupModalContentModule.default);

function ModalContainer(props) {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var handlePopupButtonClick = function handlePopupButtonClick() {
    setOpen(true);
  };

  var handlePopupRequestClose = function handlePopupRequestClose() {
    setOpen(false);
  };

  var disclosureManager = props.disclosureManager;
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
    className: cx('content-container')
  }, _react.default.createElement(_terraPopup.default, {
    isArrowDisplayed: true,
    isOpen: open,
    onRequestClose: handlePopupRequestClose,
    targetRef: function targetRef() {
      return document.getElementById('popup-in-modal');
    }
  }, _react.default.createElement(_Placeholder.default, {
    title: "Popup Content"
  })), _react.default.createElement(_terraButton.default, {
    id: "popup-in-modal",
    text: "Popup In Modal",
    onClick: handlePopupButtonClick
  }), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement(_terraButton.default, {
    className: "close-disclosure",
    text: "Close Disclosure",
    onClick: disclosureManager.closeDisclosure
  })));
}

ModalContainer.propTypes = {
  disclosureManager: _terraDisclosureManager.disclosureManagerShape
};

var _default = (0, _terraDisclosureManager.withDisclosureManager)(ModalContainer);

exports.default = _default;