"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _terraPopup = _interopRequireDefault(require("terra-popup"));

var _terraButton = _interopRequireDefault(require("terra-button"));

var _Placeholder = _interopRequireDefault(require("terra-doc-template/lib/Placeholder"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _PopupAttachmentBehaviorModule = _interopRequireDefault(require("./PopupAttachmentBehavior.module.scss"));

var cx = _bind.default.bind(_PopupAttachmentBehaviorModule.default);

function PopupAttachmentBehavior() {
  var buttonElement = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var _useState3 = (0, _react.useState)('auto'),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      contentBehavior = _useState4[0],
      setContentBehavior = _useState4[1];

  var setButtonNode = function setButtonNode(node) {
    buttonElement.current = node;
  };

  var getButtonNode = function getButtonNode() {
    return buttonElement.current;
  };

  var handleButtonClick = function handleButtonClick() {
    setOpen(true);
  };

  var handleRequestClose = function handleRequestClose() {
    setOpen(false);
  };

  var handleChange = function handleChange(event) {
    setContentBehavior(event.target.value);
  };

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", null, _react.default.createElement("label", {
    htmlFor: "popup-behavior"
  }, "Attachment Behavior"), _react.default.createElement("select", {
    id: "popup-behavior",
    onChange: handleChange,
    value: contentBehavior,
    className: cx('selection-list')
  }, _react.default.createElement("option", {
    value: "auto"
  }, "Auto"), _react.default.createElement("option", {
    value: "flip"
  }, "Flip"), _react.default.createElement("option", {
    value: "push"
  }, "Push")), _react.default.createElement(_terraButton.default, {
    className: cx('popup-wrapper'),
    text: "Open Popup",
    onClick: handleButtonClick,
    refCallback: setButtonNode
  })), _react.default.createElement(_terraPopup.default, {
    attachmentBehavior: contentBehavior,
    contentAttachment: "top center",
    isOpen: open,
    targetRef: getButtonNode,
    onRequestClose: handleRequestClose
  }, _react.default.createElement(_Placeholder.default, {
    title: "Popup Content"
  })));
}

var _default = PopupAttachmentBehavior;
exports.default = _default;