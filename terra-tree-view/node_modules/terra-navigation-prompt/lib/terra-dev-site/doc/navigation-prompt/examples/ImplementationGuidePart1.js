"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _terraNavigationPrompt = _interopRequireWildcard(require("terra-navigation-prompt"));

var Form = function Form(_ref) {
  var title = _ref.title,
      ariaLabel = _ref.ariaLabel;

  var _useState = (0, _react.useState)(''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      inputValue = _useState2[0],
      setInputValue = _useState2[1];

  return _react.default.createElement("div", null, _react.default.createElement("p", null, title), inputValue.length ? _react.default.createElement(_terraNavigationPrompt.default, {
    description: title
  }) : undefined, _react.default.createElement("input", {
    type: "text",
    "aria-label": ariaLabel,
    onChange: function onChange(event) {
      setInputValue(event.target.value);
    },
    value: inputValue
  }), _react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      setInputValue('');
    }
  }, "Submit"));
};

Form.propTypes = {
  title: _propTypes.default.string,
  ariaLabel: _propTypes.default.string
};

var FormSwitcher = function FormSwitcher() {
  var _useState3 = (0, _react.useState)('Form 1'),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      activeForm = _useState4[0],
      setActiveForm = _useState4[1];

  var formCheckpointRef = (0, _react.useRef)();

  function onSwitchForm(formKey) {
    formCheckpointRef.current.resolvePrompts({
      title: 'Descriptive Notification Prompt Title',
      startMessage: 'Descriptive Notification Prompt Message',
      rejectButtonText: 'Descriptive Reject Button Action',
      acceptButtonText: 'Descriptive Accept Button Action',
      buttonOrder: 'acceptFirst'
    }).then(function () {
      setActiveForm(formKey);
    }).catch(function () {});
  }

  return _react.default.createElement("div", null, _react.default.createElement("h2", null, "Form Switcher"), _react.default.createElement("p", null, "The user will be prompted with the provided messaging when Forms are switched with unsaved changes present."), _react.default.createElement("button", {
    type: "button",
    disabled: activeForm === 'Form 1',
    onClick: onSwitchForm.bind(null, 'Form 1')
  }, "Switch to Form 1"), _react.default.createElement("button", {
    type: "button",
    disabled: activeForm === 'Form 2',
    onClick: onSwitchForm.bind(null, 'Form 2')
  }, "Switch to Form 2"), _react.default.createElement(_terraNavigationPrompt.NavigationPromptCheckpoint, {
    ref: formCheckpointRef
  }, _react.default.createElement(Form, {
    title: activeForm,
    key: activeForm,
    ariaLabel: activeForm
  })));
};

var _default = FormSwitcher;
exports.default = _default;