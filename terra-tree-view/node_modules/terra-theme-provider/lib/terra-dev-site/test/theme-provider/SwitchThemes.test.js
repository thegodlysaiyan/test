"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _ThemeProvider = _interopRequireDefault(require("../../../ThemeProvider"));

var _MockThemeComponent = _interopRequireDefault(require("../common/MockThemeComponent"));

var SwitchThemes = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(SwitchThemes, _React$Component);

  function SwitchThemes(props) {
    var _this;

    (0, _classCallCheck2.default)(this, SwitchThemes);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SwitchThemes).call(this, props));
    _this.state = {
      themeName: ''
    };
    _this.handleSelectChange = _this.handleSelectChange.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(SwitchThemes, [{
    key: "handleSelectChange",
    value: function handleSelectChange(event) {
      this.setState((0, _defineProperty2.default)({}, event.target.name, event.target.value));
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", null, _react.default.createElement("form", null, _react.default.createElement("label", {
        htmlFor: "theme"
      }, "Theme Switcher"), _react.default.createElement("select", {
        id: "theme",
        name: "themeName",
        value: this.state.themeName,
        onChange: this.handleSelectChange
      }, _react.default.createElement("option", {
        value: ""
      }, "Default Theme"), _react.default.createElement("option", {
        value: _ThemeProvider.default.Opts.Themes.MOCK
      }, "Mock Theme"))), _react.default.createElement(_ThemeProvider.default, {
        id: "themeProvider",
        themeName: this.state.themeName
      }, _react.default.createElement(_MockThemeComponent.default, {
        id: "themedComponent"
      }, "Theme Provider Test")));
    }
  }]);
  return SwitchThemes;
}(_react.default.Component);

var _default = SwitchThemes;
exports.default = _default;