"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireWildcard(require("terra-infinite-list/lib/index"));

var _Placeholder = _interopRequireDefault(require("terra-doc-template/lib/Placeholder"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _mockSubsection = _interopRequireDefault(require("./mock-data/mock-subsection"));

var _MyExampleContainer = _interopRequireDefault(require("../common/MyExampleContainer"));

var _InfiniteListDocExampleCommonModule = _interopRequireDefault(require("../example/InfiniteListDocExampleCommon.module.scss"));

var cx = _bind.default.bind(_InfiniteListDocExampleCommonModule.default);

var createListItem = function createListItem(itemData) {
  return _react.default.createElement(_index.Item, {
    key: itemData.key
  }, _react.default.createElement(_Placeholder.default, {
    title: itemData.title,
    className: cx('placeholder')
  }));
};

var createSubSection = function createSubSection(subsectionData) {
  var section = [_react.default.createElement(_index.SubsectionHeader, {
    key: subsectionData.key,
    title: subsectionData.title
  })];
  subsectionData.childItems.forEach(function (childItem) {
    return section.push(createListItem(childItem));
  });
  return section;
};

var createSection = function createSection(sectionData) {
  var section = [_react.default.createElement(_index.SectionHeader, {
    key: sectionData.key,
    title: sectionData.title
  })];
  sectionData.childItems.forEach(function (subsection) {
    return section.push(createSubSection(subsection));
  });
  return section;
};

var createSections = function createSections(data) {
  return data.map(function (section) {
    return createSection(section);
  });
};

var InfiniteListSection = function InfiniteListSection() {
  return _react.default.createElement(_MyExampleContainer.default, null, _react.default.createElement(_index.default, {
    dividerStyle: "standard",
    isFinishedLoading: true,
    ariaLabel: "Subsection"
  }, createSections(_mockSubsection.default)));
};

var _default = InfiniteListSection;
exports.default = _default;