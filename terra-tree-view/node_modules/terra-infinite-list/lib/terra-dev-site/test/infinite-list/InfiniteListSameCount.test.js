"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _bind = _interopRequireDefault(require("classnames/bind"));

var _index = _interopRequireWildcard(require("../../../index"));

var _InfiniteListTestCommonModule = _interopRequireDefault(require("./InfiniteListTestCommon.module.scss"));

var cx = _bind.default.bind(_InfiniteListTestCommonModule.default);

var InfiniteListSameCount =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(InfiniteListSameCount, _React$Component);

  function InfiniteListSameCount(props) {
    var _this;

    (0, _classCallCheck2.default)(this, InfiniteListSameCount);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InfiniteListSameCount).call(this, props));
    _this.handleUpdateItems = _this.handleUpdateItems.bind((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      useItemOne: true
    };
    return _this;
  }

  (0, _createClass2.default)(InfiniteListSameCount, [{
    key: "handleUpdateItems",
    value: function handleUpdateItems() {
      this.setState(function (prevState) {
        return {
          useItemOne: !prevState.useItemOne
        };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var items1 = [_react.default.createElement(_index.Item, {
        key: "item-0"
      }, _react.default.createElement("div", {
        className: cx('item-type1')
      }, "Item 0")), _react.default.createElement(_index.Item, {
        key: "item-1"
      }, _react.default.createElement("div", {
        className: cx('item-type2')
      }, "Item 1")), _react.default.createElement(_index.Item, {
        key: "item-2"
      }, _react.default.createElement("div", {
        className: cx('item-type1')
      }, "Item 2")), _react.default.createElement(_index.Item, {
        key: "item-3"
      }, _react.default.createElement("div", {
        className: cx('item-type2')
      }, "Item 3"))];
      var items2 = [_react.default.createElement(_index.Item, {
        key: "item-0"
      }, _react.default.createElement("div", {
        className: cx('item-type3')
      }, "Item 0")), _react.default.createElement(_index.Item, {
        key: "item-1"
      }, _react.default.createElement("div", {
        className: cx('item-type4')
      }, "Item 1")), _react.default.createElement(_index.Item, {
        key: "item-2"
      }, _react.default.createElement("div", {
        className: cx('item-type3')
      }, "Item 2")), _react.default.createElement(_index.Item, {
        key: "item-3"
      }, _react.default.createElement("div", {
        className: cx('item-type4')
      }, "Item 3"))];
      return _react.default.createElement("div", null, _react.default.createElement("button", {
        type: "button",
        id: "test-click",
        onClick: this.handleUpdateItems
      }, "update items"), _react.default.createElement("div", {
        className: cx('infinite-list-wrapper')
      }, _react.default.createElement(_index.default, {
        id: "test-infinite-list",
        isFinishedLoading: true,
        ariaLabel: "Same Count"
      }, this.state.useItemOne ? items1 : items2)));
    }
  }]);
  return InfiniteListSameCount;
}(_react.default.Component);

var _default = InfiniteListSameCount;
exports.default = _default;