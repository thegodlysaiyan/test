"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _intlLoaders = _interopRequireDefault(require("./intlLoaders"));

var _translationsLoaders = _interopRequireDefault(require("./translationsLoaders"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var permitParams = function permitParams(callback) {
  if (typeof callback !== 'function') {
    throw new Error('Second argument must be function');
  }
};

var _default = function _default(locale, callback, scope) {
  permitParams(callback);
  /**
   * Use try-catch to check if Intl is provided by the browser. In some instances checking Intl will throw an
   * error and crash the page with little information.
   *
   * Reference: https://github.com/cerner/terra-core/issues/2820
   */

  var hasIntl;

  try {
    // eslint-disable-next-line compat/compat
    hasIntl = (typeof Intl === "undefined" ? "undefined" : _typeof(Intl)) === 'object' && typeof Intl.DateTimeFormat === 'function' && typeof Intl.NumberFormat === 'function';
  } catch (error) {
    hasIntl = false;
  }

  if (!hasIntl) {
    require('intl');
  }

  if (global.IntlPolyfill) {
    (0, _intlLoaders.default)(locale);
  }

  (0, _translationsLoaders.default)(locale, callback, scope);
};
/* eslint-enable global-require, import/no-named-as-default */


exports.default = _default;